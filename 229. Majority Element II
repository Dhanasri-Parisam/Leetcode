class Solution {
public:
    vector<int> majorityElement(vector<int>& v) {
    int n=v.size();
    vector<int> ans;
    for(int i=0;i<n;i++){
        if (ans.size() == 0 || ans[0] != v[i]) {
                int cnt = 0;
                for (int j = 0; j < n; j++) {
                    if (v[j] == v[i]) {
                        cnt++;
                    }
                }
                if (cnt > (n / 3))
                    ans.push_back(v[i]);
            }

            if (ans.size() == 2) break;
        }
        return ans;
    }
};



USING MAP:
---------------------------------------------------------------------------

class Solution {
public:
    vector<int> majorityElement(vector<int>& nums) {
        int n = nums.size();
        map<int, int> mpp;
        vector<int> result;
        for (int i = 0; i < n; i++) {
            mpp[nums[i]]++;
        }
        for (auto it : mpp) {
            if (it.second > (n / 3)) {
                result.push_back(it.first);
            }
        }
        return result;
    }
};
