class Solution {
public:
    int numberOfAlternatingGroups(vector<int>& colors) {
        int count=0,n=colors.size();
       for (int i = 0; i < n; i++) {
            // Check the triplet (i, (i+1) % n, (i+2) % n)
            int middle = colors[(i + 1) % n];
            if (colors[i] != middle && middle != colors[(i + 2) % n]) {
                count++;
            }
        }
        return count;
    }
};


-----------------------------------------------------------------------------------------------------------------------------------------
class Solution {
public:
    int numberOfAlternatingGroups(vector<int>& colors) 
    {
        int n = colors.size();
        for(int i=0;i<n;i++)
            colors.push_back(colors[i]);
        
        int ans = 0;
        for(int i=0;i<n;i++)
            if(colors[i] == colors[i+2] and colors[i] != colors[i+1])
                ans++;
        return ans;
    }
};
