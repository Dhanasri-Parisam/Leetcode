class Solution {
  public:
    // Function to find a solved Sudoku.
    bool check(int i,int j,int k,vector<vector<int>> &mat){
        for(int r=0;r<9;r++){
            if(r!=i && mat[r][j]==k)
            return false;
        }
        
        for(int c=0;c<9;c++){
            if(c!=j && mat[i][c]==k)
            return false;
        }
        
         int r=(i/3)*3 , c=(j/3)*3;
         for(int a=0;a<3;a++){
             for(int b=0;b<3;b++){
                 if(mat[r+a][c+b]==k) return false;
             }
         }
         
         return true;
    }
    
    bool solve(vector<vector<int>> &mat){
        for(int i=0;i<9;i++){
            for(int j=0;j<9;j++){
                if(mat[i][j]==0){
                    for(int k=1;k<=9;k++){
                        if(check(i,j,k,mat)){
                            mat[i][j]=k;
                            if(solve(mat))
                             return true;
                             mat[i][j]=0;
                        }
                    }
                    return false;
                }
            }
        }
        
        return true;
    }
    void solveSudoku(vector<vector<int>> &mat) {
        // code here
        solve(mat);
    }
    };
